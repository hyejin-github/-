{"version":3,"file":"static/js/285.ae2a296f.chunk.js","mappings":"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","sources":["assets/images/noimg.svg","components/common/ImgUploader/ImgResizer.tsx","utils/resizer.ts","components/common/s3Uploader/awsS3.ts","components/common/s3Uploader/Editor.tsx","screens/TipPage/TipEdit.tsx","utils/isImage.ts"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNoimg(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 256,\n    height: 256,\n    viewBox: \"0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      stroke: \"none\",\n      strokeWidth: 0,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"none\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \"translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 87 19.986 c -1.657 0 -3 1.343 -3 3 v 44.027 c 0 0.999 -0.295 1.924 -0.781 2.72 L 63.005 49.021 c -1.111 -1.137 -2.916 -1.213 -4.116 -0.168 L 45.173 60.779 l -1.383 -1.422 c -1.155 -1.188 -3.054 -1.215 -4.242 -0.059 c -1.188 1.154 -1.214 3.054 -0.06 4.242 l 3.361 3.456 c 1.11 1.142 2.919 1.218 4.12 0.172 l 13.72 -11.93 l 16.619 17.029 H 25.623 c -1.657 0 -3 1.343 -3 3 s 1.343 3 3 3 h 53.122 c 2.188 0 4.226 -0.638 5.955 -1.722 c 0.047 -0.028 0.094 -0.054 0.14 -0.085 C 87.94 74.454 90 70.973 90 67.014 V 22.986 C 90 21.33 88.657 19.986 87 19.986 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(173,173,173)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 89.233 5.323 c -1.106 -1.232 -3.004 -1.336 -4.236 -0.23 l -7.401 6.638 H 11.255 C 5.049 11.731 0 16.78 0 22.986 v 44.027 c 0 4.027 2.133 7.557 5.323 9.546 l -4.326 3.88 c -1.233 1.106 -1.336 3.003 -0.23 4.236 c 0.593 0.661 1.412 0.997 2.234 0.997 c 0.713 0 1.429 -0.253 2.002 -0.767 l 84 -75.348 C 90.236 8.453 90.34 6.556 89.233 5.323 z M 11.255 17.731 h 59.652 L 34.802 50.117 l -8.927 -9.179 c -1.124 -1.155 -2.958 -1.217 -4.155 -0.14 L 6 54.923 V 22.986 C 6 20.088 8.357 17.731 11.255 17.731 z M 6 67.014 v -4.025 l 17.584 -15.8 l 6.748 6.938 L 10.223 72.164 C 7.818 71.683 6 69.558 6 67.014 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(173,173,173)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 33.167,\n    cy: 29.037,\n    r: 6.047,\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(173,173,173)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \"  matrix(1 0 0 1 0 0) \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNoimg);\nexport default __webpack_public_path__ + \"static/media/noimg.2c17e3ab129feea1ae1b9707c7fb1580.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef } from \"react\";\r\nimport \"./ImgResizer.scss\";\r\n\r\ninterface ImgResizerProps {\r\n  imgfile: File;\r\n  newImgfile: any;\r\n  imgW: number;\r\n  imgH: number;\r\n}\r\nfunction ImgResizer({ imgfile, newImgfile, imgW, imgH }: ImgResizerProps) {\r\n  const canvasRef = useRef<any>(null);\r\n\r\n  const newImg = new Image();\r\n  const imgUrl = URL.createObjectURL(imgfile);\r\n  newImg.src = imgUrl;\r\n  newImg.onload = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas?.getContext(\"2d\");\r\n    if (ctx && canvas) {\r\n      canvas.width = imgW;\r\n      canvas.height = imgH;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, imgW, imgH);\r\n      ctx.drawImage(newImg, 0, 0, imgW, imgH);\r\n      const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n      newImgfile(dataUrl);\r\n      URL.revokeObjectURL(imgUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"resizer\">\r\n      <canvas ref={canvasRef}> </canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ImgResizer);\r\n","export const dataurlToBlob = (url: string) => {\r\n  const byteString = atob(url.split(\",\")[1]);\r\n  const mimeString = url.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n  const ab = new ArrayBuffer(byteString.length);\r\n  const ia = new Uint8Array(ab);\r\n  for (let i = 0; i < byteString.length; i += 1) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n  return new Blob([ab], { type: mimeString });\r\n};\r\n\r\nexport default {};\r\n","import AWS from \"aws-sdk\";\r\nimport { v1 } from \"uuid\";\r\n\r\nAWS.config.update({\r\n  region: \"ap-northeast-2\",\r\n  accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n  secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY\r\n});\r\n\r\nexport const uploadFile = (file: File) => {\r\n  const upload = new AWS.S3.ManagedUpload({\r\n    params: {\r\n      Bucket: \"gwangjubob\",\r\n      Key: `${v1()}.png`,\r\n      Body: file\r\n    }\r\n  });\r\n  const promise = upload.promise();\r\n\r\n  return promise.then(res => {\r\n    return res.Location;\r\n  });\r\n};\r\n\r\nexport const deleteFile = (url: string) => {\r\n  const fileUrl = url.split(\"amazonaws.com/\").pop();\r\n  const del = new AWS.S3();\r\n  del.deleteObject(\r\n    {\r\n      Bucket: \"gwangjubob\",\r\n      Key: fileUrl as string\r\n    }\r\n    // function (err, data) {\r\n    // if (err) console.log(err, ㄴerr.stack);\r\n    // else console.log(data);\r\n    // }\r\n  );\r\n};\r\n\r\nexport default {};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { dataurlToBlob } from \"@utils/resizer\";\r\nimport { v1 } from \"uuid\";\r\nimport { deleteFile, uploadFile } from \"./awsS3\";\r\nimport \"./Editor.scss\";\r\n\r\ninterface EditorProps {\r\n  editorValue: (value: string) => void;\r\n  getValue: boolean;\r\n  update: string;\r\n}\r\n\r\nfunction Editor({ editorValue, getValue, update }: EditorProps) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [tmpImg, setTmpImg] = useState([\"\"]);\r\n\r\n  // 에디터 커스텀\r\n  const quillRef = useRef<any>(null);\r\n  const toolbarOptions = [[\"image\"], [{ color: [] }, { background: [] }]];\r\n  const modules = {\r\n    toolbar: {\r\n      container: toolbarOptions\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // 에디터 이미지 첨부 시 커스텀 이미지핸들러 실행\r\n\r\n    const handleImage = () => {\r\n      // 인풋 만들어서 업로드\r\n      const input = document.createElement(\"input\");\r\n      input.setAttribute(\"type\", \"file\");\r\n      input.setAttribute(\"accept\", \"image/*\");\r\n      input.click();\r\n      input.onchange = async () => {\r\n        if (input.files) {\r\n          const quill = quillRef.current;\r\n          const range = quill.getEditor().getSelection(true);\r\n          const file = input.files[0];\r\n          const newImg = new Image();\r\n          const imgUrl = URL.createObjectURL(file);\r\n          newImg.src = imgUrl;\r\n\r\n          // 캔버스에 그리면서 리사이징, 컴포넌트로 사용하던거랑 조금 달라서 따로 구현\r\n          const canvas = document.createElement(\"canvas\");\r\n          newImg.onload = async () => {\r\n            const ctx = canvas.getContext(\"2d\");\r\n            canvas.width = 400;\r\n            canvas.height = 400;\r\n            ctx?.drawImage(newImg, 0, 0, 400, 400);\r\n            const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n            URL.revokeObjectURL(imgUrl);\r\n\r\n            // 캔버스로 그리면 dataurl 생성, 생성 된 dataurl > Blob > File 순으로 변경\r\n            const newFile = new File([dataurlToBlob(dataUrl)], v1());\r\n            const url = await uploadFile(newFile);\r\n            setTmpImg(cur => [...cur, url]);\r\n            quill.getEditor().insertEmbed(range.index, \"image\", url);\r\n            quill.getEditor().setSelection(range.index + 1);\r\n          };\r\n        }\r\n      };\r\n    };\r\n\r\n    if (quillRef.current) {\r\n      const toolbar = quillRef.current.getEditor().getModule(\"toolbar\");\r\n      toolbar.addHandler(\"image\", handleImage);\r\n    }\r\n  }, []);\r\n\r\n  // update 프롭스가 전달되면 디폴트값 설정\r\n  useEffect(() => {\r\n    if (update) {\r\n      setValue(update);\r\n      const quill = quillRef.current;\r\n      const delta = quill.getEditor().clipboard.convert(update);\r\n      quill.getEditor().setContents(delta, \"silent\");\r\n    }\r\n  }, [update]);\r\n\r\n  const formats = [\"header\", \"background\", \"color\", \"image\", \"width\"];\r\n\r\n  if (getValue) {\r\n    tmpImg.shift();\r\n    tmpImg.forEach(async item => {\r\n      if (!value.includes(item)) {\r\n        await deleteFile(item);\r\n      }\r\n    });\r\n    editorValue(value);\r\n  }\r\n\r\n  const isPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    alert(\"복사 붙여넣기는 지원하지 않습니다.\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"editor\">\r\n      <div className=\"editor\" onPaste={e => isPaste(e)}>\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          defaultValue={value}\r\n          modules={modules}\r\n          formats={formats}\r\n          ref={quillRef}\r\n          onChange={setValue}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Editor);\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Editor from \"@components/common/s3Uploader/Editor\";\r\nimport \"./TipEdit.scss\";\r\nimport noimg from \"@images/noimg.svg\";\r\nimport HoneyRecipe from \"@images/HoneyRecipe.svg\";\r\nimport HoneyTem from \"@images/HoneyTem.svg\";\r\nimport HoneyTip from \"@images/HoneyTip.svg\";\r\nimport ImgResizer from \"@components/common/ImgUploader/ImgResizer\";\r\nimport isImage from \"@utils/isImage\";\r\nimport { tipCreate } from \"@apis/honeyTip\";\r\nimport LoadingSpinner from \"@images/LoadingSpinner.svg\";\r\nimport X from \"@images/X.svg\";\r\n\r\nfunction TipEdit() {\r\n  const [sendFile, setSendFile] = useState<File | null>(null);\r\n  const [thumnail, setThumnail] = useState(\"\");\r\n  const [category, setCategory] = useState(\"tip\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [chk, setChk] = useState(false);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const imgInput = useRef<HTMLInputElement>(null);\r\n  const titleRef = useRef<HTMLInputElement>(null);\r\n  const navigate = useNavigate();\r\n\r\n  const back = () => {\r\n    navigate(\"/tip\");\r\n  };\r\n\r\n  // 썸네일 인풋태그열기 > 파일내리기 > 파일 받기\r\n  const clickInput = () => {\r\n    imgInput.current?.click();\r\n  };\r\n\r\n  const fileread = () => {\r\n    if (imgInput.current?.files) {\r\n      const file = imgInput.current.files[0];\r\n\r\n      if (file && isImage(file)) {\r\n        setSendFile(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const receiveFile = useCallback((data: string) => {\r\n    setThumnail(data);\r\n  }, []);\r\n\r\n  // 카테고리 변경\r\n  const changeCategory = (cate: string) => {\r\n    setCategory(cate);\r\n  };\r\n\r\n  // 유효성 검사\r\n  const chkForm = () => {\r\n    if (!titleRef.current?.value) {\r\n      setErrMsg(\"제목을 입력해주세요.\");\r\n      titleRef.current?.focus();\r\n      return;\r\n    }\r\n    if (titleRef.current.value.length > 30) {\r\n      setErrMsg(\"제목은 30자까지에요.\");\r\n      titleRef.current?.focus();\r\n      return;\r\n    }\r\n    setSpinner(true);\r\n    setChk(true);\r\n  };\r\n\r\n  // 검사 > 에디터에서 밸류 받기 > DB 전송\r\n  const receiveValue = async (data: string) => {\r\n    const payload = {\r\n      category,\r\n      title: titleRef.current?.value as string,\r\n      content: data,\r\n      bannerImg: thumnail.replace(\"data:image/jpeg;base64,\", \"\")\r\n    };\r\n    const res = await tipCreate(payload);\r\n    if (res.status === 500) {\r\n      alert(\"글이 너무 길어요 ㅠㅠ\");\r\n      setSpinner(false);\r\n      navigate(`/tip`);\r\n    }\r\n    navigate(`/tip/detail/${res}`);\r\n  };\r\n\r\n  return (\r\n    <div id=\"tip-edit\">\r\n      <input type=\"file\" accept=\"image/*\" ref={imgInput} onChange={fileread} />\r\n      {sendFile ? (\r\n        <ImgResizer\r\n          imgfile={sendFile}\r\n          newImgfile={receiveFile}\r\n          imgW={400}\r\n          imgH={400}\r\n        />\r\n      ) : null}\r\n      <div className=\"tip-header \">\r\n        <div className=\"tip-header-title notoBold flex\">\r\n          <p>\r\n            <span>꿀</span>팁<span> 쓰</span>기\r\n          </p>\r\n        </div>\r\n        <div className=\"tip-header-category flex\">\r\n          <p className=\"category-label notoMid\">Category</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => changeCategory(\"recipe\")}\r\n            className={`notoReg ${category === \"recipe\" ? \"active\" : null}`}\r\n          >\r\n            <img src={HoneyRecipe} alt=\"꿀시피\" title=\"꿀시피\" />\r\n            <p className=\"notoReg\">꿀시피</p>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => changeCategory(\"tip\")}\r\n            className={`notoReg ${category === \"tip\" ? \"active\" : null}`}\r\n          >\r\n            <img src={HoneyTip} alt=\"꿀생\" title=\"꿀생\" />\r\n            <p className=\"notoReg\">꿀생</p>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => changeCategory(\"item\")}\r\n            className={`notoReg ${category === \"item\" ? \"active\" : null}`}\r\n          >\r\n            <img src={HoneyTem} alt=\"꿀템\" title=\"꿀템\" />\r\n            <p className=\"notoReg\">꿀템</p>\r\n          </button>\r\n        </div>\r\n        <div className=\"tip-header-preview flex justify-center\">\r\n          <button\r\n            onClick={() => {\r\n              setThumnail(\"\");\r\n            }}\r\n            type=\"button\"\r\n            className={`tip-close ${!thumnail && \"hide\"}`}\r\n          >\r\n            <img src={X} alt=\"close\" />\r\n          </button>\r\n          <button\r\n            onClick={clickInput}\r\n            type=\"button\"\r\n            className=\"tip-header-preview_container flex column justify-center align-center\"\r\n          >\r\n            <p className=\"tip-header-preview_container-title notoMid\">\r\n              Thumnail\r\n            </p>\r\n            <div className=\"tip-header-preview_img flex justify-center align-center\">\r\n              {thumnail ? (\r\n                <img\r\n                  className=\"tip-header-preview_img-img\"\r\n                  src={thumnail}\r\n                  alt=\"preview\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  className=\"tip-header-preview_img-img\"\r\n                  src={noimg}\r\n                  alt=\"no-img\"\r\n                  title=\"preview\"\r\n                />\r\n              )}\r\n            </div>\r\n            <span className=\"notoReg\">\r\n              jpg, png, gif, jpeg 파일만 지원해요.\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"tip-content flex column align-center\">\r\n        <p className=\"notoMid\">Content</p>\r\n        <input\r\n          ref={titleRef}\r\n          className=\"tip-title\"\r\n          type=\"text\"\r\n          placeholder=\"제목은 30자까지 입력할 수 있어요.\"\r\n        />\r\n        {errMsg ? <span className=\"notoReg fs-16\">{errMsg}</span> : null}\r\n\r\n        <Editor editorValue={receiveValue} getValue={chk} update={`${\"\"}`} />\r\n      </div>\r\n      {spinner ? (\r\n        <div className=\"send flex\">\r\n          <img\r\n            src={LoadingSpinner}\r\n            className=\"loading-spinner\"\r\n            alt=\"로딩스피너\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"send flex notoReg\">\r\n          <button type=\"button\" onClick={chkForm}>\r\n            작성\r\n          </button>\r\n          <button className=\"cancle\" type=\"button\" onClick={back}>\r\n            취소\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TipEdit;\r\n","const isImage = (file: File) => {\r\n  const fileExt = file.name\r\n    .substring(file.name.lastIndexOf(\".\") + 1, file.name.length)\r\n    .toLowerCase();\r\n  if (\r\n    fileExt !== \"jpg\" &&\r\n    fileExt !== \"png\" &&\r\n    fileExt !== \"gif\" &&\r\n    fileExt !== \"jpeg\"\r\n  ) {\r\n    alert(\"지원하지 않는 확장자에요!\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default isImage;\r\n"],"names":["ImgResizer","imgfile","newImgfile","imgW","imgH","canvasRef","useRef","newImg","Image","imgUrl","URL","createObjectURL","src","onload","canvas","current","ctx","getContext","width","height","fillStyle","fillRect","drawImage","dataUrl","toDataURL","revokeObjectURL","id","ref","React","dataurlToBlob","url","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","AWS","region","accessKeyId","process","REACT_APP_AWS_ACCESS_KEY","secretAccessKey","REACT_APP_AWS_SECRET_KEY","uploadFile","file","params","Bucket","Key","v1","Body","promise","then","res","Location","deleteFile","fileUrl","pop","deleteObject","Editor","editorValue","getValue","update","useState","value","setValue","tmpImg","setTmpImg","quillRef","modules","toolbar","container","color","background","useEffect","getEditor","getModule","addHandler","input","document","createElement","setAttribute","click","onchange","files","quill","range","getSelection","newFile","File","cur","insertEmbed","index","setSelection","delta","clipboard","convert","setContents","shift","forEach","item","includes","className","onPaste","e","preventDefault","alert","isPaste","theme","defaultValue","formats","onChange","sendFile","setSendFile","thumnail","setThumnail","category","setCategory","errMsg","setErrMsg","chk","setChk","spinner","setSpinner","imgInput","titleRef","navigate","useNavigate","receiveFile","useCallback","data","changeCategory","cate","receiveValue","payload","title","content","bannerImg","replace","tipCreate","status","accept","isImage","onClick","HoneyRecipe","alt","HoneyTip","HoneyTem","X","noimg","placeholder","LoadingSpinner","focus","fileExt","name","substring","lastIndexOf","toLowerCase"],"sourceRoot":""}