{"version":3,"file":"static/js/570.0339e8b2.chunk.js","mappings":"8RA8GA,MArGA,WACE,OAA4BA,EAAAA,EAAAA,UAAiB,IAA7C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAkB,GAApD,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAaC,EAAAA,EAAAA,QAAyB,MACtCC,GAAmBD,EAAAA,EAAAA,QAAyB,MAE5CE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KACXC,EAAU,yCAAG,4GACZP,EAAWQ,eADC,OACZ,EAAoBC,MADR,gBAEfZ,EAAU,kEACV,UAAAG,EAAWQ,eAAX,SAAoBE,QAHL,oCAILR,EAAiBM,eAJZ,OAIL,EAA0BC,MAJrB,iBAKfZ,EAAU,wEACV,UAAAK,EAAiBM,eAAjB,SAA0BE,QANX,2BAOLZ,EAPK,wBAQfC,GAAa,GARE,WASGY,EAAAA,EAAAA,IAChBX,EAAWQ,QAAQC,MACnBP,EAAiBM,QAAQC,OAXZ,WAaH,YAbG,yCAcPJ,GAASO,EAAAA,EAAAA,MAdF,QAebT,EAAS,KAfI,wBAiBbN,EAAU,qHAjBG,QAmBfE,GAAa,GAnBE,4CAAH,qDAyBhB,OACE,gBAAKc,UAAU,UAAf,UACE,iBAAKC,GAAG,QAAQD,UAAU,UAA1B,WACE,mBAAQA,UAAU,SAAlB,UACE,eAAGA,UAAU,+BAAb,8CACS,kBADT,4DAKF,SAACE,EAAA,EAAD,KACA,iBAAKF,UAAU,sCAAf,WACE,iBAAMA,UAAU,cAChB,cAAGA,UAAU,2BAAb,2BACA,iBAAMA,UAAU,iBAElB,kBAAMA,UAAU,OAAhB,WACE,cAAGA,UAAU,4BAAb,iCACA,kBACEA,UAAU,4BACVG,KAAK,OACLC,YAAY,gEACZC,IAAKlB,KAEP,cAAGa,UAAU,4BAAb,uCACA,kBACEA,UAAU,4BACVG,KAAK,WACLC,YAAY,sEACZC,IAAKhB,EACLiB,QAhCkB,SAACC,GACb,UAAVA,EAAEC,KAAiBd,KAgCfe,aAAa,sBAEf,cAAGT,UAAU,0BAAb,SAAwCjB,KACxC,mBACEoB,KAAK,SACLH,UAAU,2DACVU,QAAShB,EAHX,SAKGT,GACC,gBACE0B,IAAKC,EAAAA,EACLZ,UAAU,kBACVa,IAAI,mCAGN,2BAIN,oBAAQb,UAAU,uBAAlB,WACE,iBAAKA,UAAU,qDAAf,WACE,cAAGA,UAAU,cAAb,8EACA,SAAC,KAAD,CAAMA,UAAU,eAAec,GAAG,QAAlC,0CAIF,iBAAKd,UAAU,qDAAf,WACE,cAAGA,UAAU,cAAb,8EACA,SAAC,KAAD,CAAMA,UAAU,eAAec,GAAG,WAAlC","sources":["screens/Login/Login.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { login } from \"@apis/auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport SocialSection from \"@components/common/SocialSection\";\r\nimport { getUserInfo } from \"@store/ducks/auth/authThunk\";\r\nimport { useAppDispatch } from \"@store/hooks\";\r\nimport LoadingSpinner from \"@images/LoadingSpinner.svg\";\r\n\r\nfunction Login() {\r\n  const [errMsg, setErrMsg] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const idInputRef = useRef<HTMLInputElement>(null);\r\n  const passwordInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const startLogin = async () => {\r\n    if (!idInputRef.current?.value) {\r\n      setErrMsg(\"아이디를 입력해주세요.\");\r\n      idInputRef.current?.focus();\r\n    } else if (!passwordInputRef.current?.value) {\r\n      setErrMsg(\"비밀번호를 입력해주세요.\");\r\n      passwordInputRef.current?.focus();\r\n    } else if (!isLoading) {\r\n      setIsLoading(true);\r\n      const res = await login(\r\n        idInputRef.current.value,\r\n        passwordInputRef.current.value\r\n      );\r\n      if (res === \"SUCCESS\") {\r\n        await dispatch(getUserInfo());\r\n        navigate(\"/\");\r\n      } else {\r\n        setErrMsg(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const handlePasswordInput = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") startLogin();\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div id=\"login\" className=\"wrapper\">\r\n        <header className=\"header\">\r\n          <p className=\"header__title notoBold fs-24\">\r\n            환영합니다! <br />\r\n            나혼자 잘살아 봐요!\r\n          </p>\r\n        </header>\r\n        <SocialSection />\r\n        <div className=\"or flex align-center justify-center\">\r\n          <span className=\"or__line\" />\r\n          <p className=\"or__title notoBold fs-14\">또는</p>\r\n          <span className=\"or__line\" />\r\n        </div>\r\n        <form className=\"form\">\r\n          <p className=\"form__title notoReg fs-16\">이메일</p>\r\n          <input\r\n            className=\"form__input notoReg fs-15\"\r\n            type=\"text\"\r\n            placeholder=\"이메일을 입력해주세요\"\r\n            ref={idInputRef}\r\n          />\r\n          <p className=\"form__title notoReg fs-16\">비밀번호</p>\r\n          <input\r\n            className=\"form__input notoReg fs-15\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호를 입력해주세요\"\r\n            ref={passwordInputRef}\r\n            onKeyUp={handlePasswordInput}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <p className=\"form__msg notoMid fs-12\">{errMsg}</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"form__btn notoMid fs-15 flex align-center justify-center\"\r\n            onClick={startLogin}\r\n          >\r\n            {isLoading ? (\r\n              <img\r\n                src={LoadingSpinner}\r\n                className=\"loading-spinner\"\r\n                alt=\"로딩스피너\"\r\n              />\r\n            ) : (\r\n              \"로그인\"\r\n            )}\r\n          </button>\r\n        </form>\r\n        <footer className=\"footer notoMid fs-12\">\r\n          <div className=\"footer__container flex align-center justify-center\">\r\n            <p className=\"footer__msg\">아직 계정이 없으신가요?</p>\r\n            <Link className=\"footer__link\" to=\"/join\">\r\n              회원가입\r\n            </Link>\r\n          </div>\r\n          <div className=\"footer__container flex align-center justify-center\">\r\n            <p className=\"footer__msg\">이미 계정이 있으신가요?</p>\r\n            <Link className=\"footer__link\" to=\"/find/pw\">\r\n              비밀번호찾기\r\n            </Link>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["useState","errMsg","setErrMsg","isLoading","setIsLoading","idInputRef","useRef","passwordInputRef","navigate","useNavigate","dispatch","useAppDispatch","startLogin","current","value","focus","login","getUserInfo","className","id","SocialSection","type","placeholder","ref","onKeyUp","e","key","autoComplete","onClick","src","LoadingSpinner","alt","to"],"sourceRoot":""}