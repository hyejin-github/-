{"version":3,"file":"static/js/970.9b038778.chunk.js","mappings":"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","sources":["screens/TipPage/TipDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./TipDetail.scss\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport { tipRead, Article, tipDelete, tipLike } from \"@apis/honeyTip\";\r\nimport { addFollow, delFollow } from \"@apis/userFeed\";\r\nimport UserDummyIcon from \"@images/UserDummy.svg\";\r\nimport EmptyHeart from \"@images/ArticleEmptyHeart.svg\";\r\nimport Heart from \"@images/Heart.svg\";\r\nimport EditIcon from \"@images/EditIcon.svg\";\r\nimport DeleteIcon from \"@images/DeleteIcon.svg\";\r\nimport { useAppSelector } from \"@store/hooks\";\r\nimport { getTime } from \"@utils/getTime\";\r\nimport Comments from \"@components/Comments/Comments\";\r\nimport CommentInput from \"@components/Comments/CommentInput\";\r\n\r\nfunction TipDetail() {\r\n  const [newComment, setNewComment] = useState(false);\r\n  const [article, setArticle] = useState<Article>();\r\n  const [comment, setComment] = useState();\r\n  const [userState, setUserState] = useState({\r\n    isFollow: false,\r\n    isLike: false\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const UserInfo = useAppSelector(state => state.auth.userInfo);\r\n\r\n  const changed = () => {\r\n    setNewComment(cur => !cur);\r\n  };\r\n\r\n  useEffect(() => {\r\n    tipRead(id as string)\r\n      .then(res => {\r\n        setUserState({\r\n          isFollow: res.isFollow,\r\n          isLike: res.isLike\r\n        });\r\n        setArticle(res.tip);\r\n        const comments = res.tipComments.reverse();\r\n        setComment(comments);\r\n      })\r\n      .catch(() => navigate(\"NotFound\"));\r\n  }, [newComment, id]);\r\n\r\n  if (!article) {\r\n    return <div />;\r\n  }\r\n  const content = {\r\n    __html: article.content\r\n  };\r\n\r\n  const goEdit = () => {\r\n    navigate(`/tip/edit/${id}`, { state: article });\r\n  };\r\n\r\n  const deleteArticle = async () => {\r\n    const chk = window.confirm(\"정말로 삭제하시겠습니까?\");\r\n    if (chk) {\r\n      const res = await tipDelete(id as string);\r\n      if (res === \"SUCCESS\") {\r\n        navigate(\"/\");\r\n      }\r\n      return res;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const setLike = async () => {\r\n    if (!UserInfo) {\r\n      return navigate(\"/login\");\r\n    }\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n      const res = await tipLike(id as string);\r\n      if (res.status === 200) {\r\n        changed();\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const setFollow = async () => {\r\n    if (!UserInfo) {\r\n      return navigate(\"/login\");\r\n    }\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n      if (userState.isFollow) {\r\n        await delFollow(article.userNickname);\r\n      } else {\r\n        await addFollow(article.userNickname);\r\n      }\r\n      setIsLoading(false);\r\n      changed();\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const isAuthor = UserInfo?.nickname === article.userNickname;\r\n  return (\r\n    <div id=\"tip-detail-page\">\r\n      <div className=\"article flex column\">\r\n        <p className=\"title notoMid\">{article.title}</p>\r\n        <div className=\"header flex\">\r\n          <div className=\"header-info flex\">\r\n            <div className=\"header-info__img-container flex\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  navigate(`/userfeed/${article.userNickname}`);\r\n                }}\r\n              >\r\n                <img\r\n                  src={\r\n                    article.userProfileImg\r\n                      ? `data:image/jpeg;base64,${article.userProfileImg}`\r\n                      : UserDummyIcon\r\n                  }\r\n                  alt=\"User\"\r\n                  className=\"profile-user__img\"\r\n                  title=\"User\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"header-info__text flex column justify-center\">\r\n              <Link\r\n                to={`/userfeed/${article.userNickname}`}\r\n                className=\"user-name notoMid\"\r\n              >\r\n                {article.userNickname}\r\n              </Link>\r\n              <div className=\"created flex column align-center\">\r\n                <p className=\" notoReg\">\r\n                  {article.updateTime\r\n                    ? `${getTime(article.updateTime)} (수정됨)`\r\n                    : getTime(article.time)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={setFollow}\r\n              className={`header-info__btn notoReg ${\r\n                isAuthor ? \"hide\" : null\r\n              } ${userState.isFollow ? \"grey\" : \"yellow\"}`}\r\n              type=\"button\"\r\n            >\r\n              {userState.isFollow ? \"언팔로우\" : \"팔로우\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"header-func flex\">\r\n            {isAuthor ? (\r\n              <div className=\"header-func-btn flex\">\r\n                <button onClick={goEdit} type=\"button\">\r\n                  <img src={EditIcon} alt=\"edit\" title=\"edit\" />\r\n                </button>\r\n                <button onClick={deleteArticle} type=\"button\">\r\n                  <img src={DeleteIcon} alt=\"del\" title=\"delete\" />\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"header-func-btn flex\">\r\n                <button onClick={setLike} type=\"button\">\r\n                  <img\r\n                    src={userState.isLike ? Heart : EmptyHeart}\r\n                    alt=\"like\"\r\n                    title=\"like\"\r\n                  />\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"body flex\">\r\n          <div className=\"body-content \" dangerouslySetInnerHTML={content} />\r\n        </div>\r\n        <div className=\"comment flex column\">\r\n          <div className=\"comment-head\">\r\n            <p className=\"notoMid\">\r\n              댓글<span className=\"\">{article.comment}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"comment-input flex\">\r\n            <div className=\"input-img-container flex\">\r\n              <img\r\n                src={\r\n                  UserInfo?.profileImg\r\n                    ? `data:image/jpeg;base64,${UserInfo.profileImg}`\r\n                    : UserDummyIcon\r\n                }\r\n                alt=\"dum\"\r\n                title=\"user-icon\"\r\n              />\r\n            </div>\r\n            <CommentInput\r\n              type=\"Tip\"\r\n              changed={changed}\r\n              articleIdx={id as string}\r\n            />\r\n          </div>\r\n          {comment ? (\r\n            <Comments\r\n              isArticleAuthor={false}\r\n              postIdx={id as string}\r\n              changed={changed}\r\n              type=\"Tip\"\r\n              comments={comment}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TipDetail;\r\n"],"names":["useState","newComment","setNewComment","article","setArticle","comment","setComment","isFollow","isLike","userState","setUserState","isLoading","setIsLoading","id","useParams","navigate","useNavigate","UserInfo","useAppSelector","state","auth","userInfo","changed","cur","useEffect","tipRead","then","res","tip","comments","tipComments","reverse","catch","content","__html","deleteArticle","window","confirm","tipDelete","setLike","tipLike","status","setFollow","delFollow","userNickname","addFollow","isAuthor","nickname","className","title","type","onClick","src","userProfileImg","UserDummyIcon","alt","to","updateTime","getTime","time","EditIcon","DeleteIcon","Heart","EmptyHeart","dangerouslySetInnerHTML","profileImg","CommentInput","articleIdx","Comments","isArticleAuthor","postIdx"],"sourceRoot":""}