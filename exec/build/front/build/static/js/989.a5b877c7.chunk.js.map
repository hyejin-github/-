{"version":3,"file":"static/js/989.a5b877c7.chunk.js","mappings":"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","sources":["screens/DealPage/DealDetailPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DealDetailPage.scss\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport UserDummyIcon from \"@images/UserDummy.svg\";\r\nimport EmptyHeart from \"@images/ArticleEmptyHeart.svg\";\r\nimport KakaoMap from \"@images/kakao_map.png\";\r\nimport EditIcon from \"@images/EditIcon.svg\";\r\nimport DeleteIcon from \"@images/DeleteIcon.svg\";\r\nimport { getTime } from \"@utils/getTime\";\r\nimport { useAppSelector } from \"@store/hooks\";\r\nimport { dealRead, dealArticle, dealDelete, dealLike } from \"@apis/honeyDeal\";\r\nimport Comments from \"@components/Comments/Comments\";\r\nimport CommentInput from \"@components/Comments/CommentInput\";\r\nimport { addFollow, delFollow } from \"@apis/userFeed\";\r\nimport Heart from \"@images/Heart.svg\";\r\nimport MapModal from \"@components/common/MapModal\";\r\n\r\nfunction DealDetailPage() {\r\n  const [newComment, setNewComment] = useState(false);\r\n  const [dealState, setDealState] = useState(\"\");\r\n  const [article, setArticle] = useState<dealArticle>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [comment, setComment] = useState();\r\n  const { id } = useParams();\r\n  const [userState, setUserState] = useState({\r\n    isFollow: false,\r\n    isLike: false\r\n  });\r\n  const userInfo = useAppSelector(state => state.auth.userInfo);\r\n  const isAuthor = userInfo?.nickname === article?.userNickname;\r\n  const navigate = useNavigate();\r\n\r\n  const changed = () => {\r\n    setNewComment(cur => !cur);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dealRead(id as string).then(res => {\r\n      setArticle(res.deal);\r\n      if (res.dealComments) {\r\n        const comments = res.dealComments.reverse();\r\n        setComment(comments);\r\n      }\r\n      setDealState(res.deal.state);\r\n      setUserState({\r\n        isFollow: res.isFollow,\r\n        isLike: res.isLike\r\n      });\r\n    });\r\n  }, [newComment, id]);\r\n\r\n  const changeColor = (state: string) => {\r\n    if (state === \"거래 대기\") {\r\n      return \"green\";\r\n    }\r\n    if (state === \"거래 진행\") {\r\n      return \"yellow\";\r\n    }\r\n    return \"brown\";\r\n  };\r\n\r\n  const goEdit = () => {\r\n    navigate(`/deal/edit/${id}`, { state: article });\r\n  };\r\n\r\n  const deleteArticle = async () => {\r\n    const chk = window.confirm(\"정말로 삭제하시겠습니까?\");\r\n    if (chk) {\r\n      const res = await dealDelete(id as string);\r\n      if (res === \"SUCCESS\") {\r\n        navigate(\"/\");\r\n      }\r\n      return res;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  if (!article) {\r\n    return <div />;\r\n  }\r\n\r\n  const setLike = async () => {\r\n    if (!userInfo) {\r\n      return navigate(\"/login\");\r\n    }\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n      const res = await dealLike(id as string);\r\n      if (res.status === 200) {\r\n        changed();\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const setFollow = async () => {\r\n    if (!userInfo) {\r\n      return navigate(\"/login\");\r\n    }\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n      if (userState.isFollow) {\r\n        await delFollow(article.userNickname);\r\n      } else {\r\n        await addFollow(article.userNickname);\r\n      }\r\n      setIsLoading(false);\r\n      changed();\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  return (\r\n    <div id=\"deal-detail-page\">\r\n      <div className=\"article flex column\">\r\n        <p className=\"title notoMid\">{article.title}</p>\r\n        <div className=\"title-state_info\">\r\n          {isAuthor && (\r\n            <p className=\"notoReg fs-10\">\r\n              거래 상태는 수정페이지에서만 변경 가능해요\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"header flex\">\r\n          <div className=\"header-info flex\">\r\n            <div className=\"header-info__img-container flex\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  navigate(`/userfeed/${article.userNickname}`);\r\n                }}\r\n              >\r\n                <img\r\n                  src={\r\n                    article.userProfileImg\r\n                      ? `data:image/jpeg;base64,${article.userProfileImg}`\r\n                      : UserDummyIcon\r\n                  }\r\n                  alt=\"User\"\r\n                  className=\"profile-user__img\"\r\n                  title=\"User\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"header-info__text flex column\">\r\n              <Link\r\n                to={`/userfeed/${article.userNickname}`}\r\n                className=\"user-name notoMid\"\r\n              >\r\n                {article.userNickname}\r\n              </Link>\r\n              <div className=\"created flex column align-center\">\r\n                <p className=\" notoReg\">\r\n                  {article.updateTime\r\n                    ? `${getTime(article.updateTime)} (수정됨)`\r\n                    : getTime(article.time)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={setFollow}\r\n              className={`header-info__btn notoReg ${isAuthor && \"hide\"} ${\r\n                userState.isFollow ? \"grey\" : \"yellow\"\r\n              }`}\r\n              type=\"button\"\r\n            >\r\n              {userState.isFollow ? \"언팔로우\" : \"팔로우\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"header-func flex\">\r\n            {isAuthor ? (\r\n              <div className=\"header-func-btn flex\">\r\n                <div className=\"header-func-btn_state flex justify-center\">\r\n                  <div className={`notoReg fs-10 ${changeColor(dealState)}`} />\r\n                </div>\r\n                <button onClick={goEdit} type=\"button\">\r\n                  <img src={EditIcon} alt=\"edit\" title=\"edit\" />\r\n                </button>\r\n                <button onClick={deleteArticle} type=\"button\">\r\n                  <img src={DeleteIcon} alt=\"del\" title=\"delete\" />\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"header-func-btn flex\">\r\n                {userInfo ? (\r\n                  <MapModal targetUser={article.userNickname} />\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      navigate(\"/login\");\r\n                    }}\r\n                  >\r\n                    <img src={KakaoMap} alt=\"KakaoMap\" />\r\n                  </button>\r\n                )}\r\n\r\n                <button onClick={setLike} type=\"button\">\r\n                  <img\r\n                    src={userState.isLike ? Heart : EmptyHeart}\r\n                    alt=\"like\"\r\n                    title=\"like\"\r\n                  />\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"body flex\">\r\n          <div\r\n            className=\"body-content \"\r\n            dangerouslySetInnerHTML={{\r\n              __html: article.content\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"comment flex column\">\r\n          <div className=\"comment-head\">\r\n            <p className=\"notoMid\">\r\n              댓글<span className=\"\">{article.comment}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"comment-input flex\">\r\n            <div className=\"input-img-container flex\">\r\n              <img\r\n                src={\r\n                  userInfo?.profileImg\r\n                    ? `data:image/jpeg;base64,${userInfo.profileImg}`\r\n                    : UserDummyIcon\r\n                }\r\n                alt=\"dum\"\r\n                title=\"user-icon\"\r\n              />\r\n            </div>\r\n            <CommentInput\r\n              type=\"Deal\"\r\n              changed={changed}\r\n              articleIdx={id as string}\r\n            />\r\n          </div>\r\n          {comment ? (\r\n            <Comments\r\n              isArticleAuthor={article.userNickname === userInfo?.nickname}\r\n              postIdx={id as string}\r\n              changed={changed}\r\n              type=\"Deal\"\r\n              comments={comment}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DealDetailPage;\r\n"],"names":["useState","newComment","setNewComment","dealState","setDealState","article","setArticle","isLoading","setIsLoading","comment","setComment","id","useParams","isFollow","isLike","userState","setUserState","userInfo","useAppSelector","state","auth","isAuthor","nickname","userNickname","navigate","useNavigate","changed","cur","useEffect","dealRead","then","res","deal","dealComments","comments","reverse","deleteArticle","window","confirm","dealDelete","setLike","dealLike","status","setFollow","delFollow","addFollow","className","title","type","onClick","src","userProfileImg","UserDummyIcon","alt","to","updateTime","getTime","time","EditIcon","DeleteIcon","MapModal","targetUser","KakaoMap","Heart","EmptyHeart","dangerouslySetInnerHTML","__html","content","profileImg","CommentInput","articleIdx","Comments","isArticleAuthor","postIdx"],"sourceRoot":""}