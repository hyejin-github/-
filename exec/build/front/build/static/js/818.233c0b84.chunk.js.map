{"version":3,"file":"static/js/818.233c0b84.chunk.js","mappings":"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","sources":["constants/reg.ts","screens/Join/JoinDetail.tsx"],"sourcesContent":["export const passwordReg =\r\n  /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/;\r\nexport const emailReg =\r\n  /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./JoinDetail.scss\";\r\nimport { passwordReg } from \"@constants/reg\";\r\nimport { useAppDispatch, useAppSelector } from \"@store/hooks\";\r\nimport { chkNickNameExist, join, login } from \"@apis/auth\";\r\nimport { getUserInfo } from \"@store/ducks/auth/authThunk\";\r\nimport LoadingSpinner from \"@images/LoadingSpinner.svg\";\r\n\r\ntype nickNameDupliType = \"\" | \"err\" | \"success\";\r\n\r\nfunction JoinDetail() {\r\n  const userId = useAppSelector(state => state.auth.tmpId);\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const [validPassword, setValidPassword] = useState(true);\r\n  const [samePassword, setSamePassword] = useState(true);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [nickNameDupli, setNickNameDupli] = useState<nickNameDupliType>(\"\");\r\n\r\n  const nickNameRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const chkPasswordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [form, setForm] = useState({\r\n    nickName: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const submitUserInfo = async () => {\r\n    if (nickNameDupli !== \"success\" || form.nickName === \"\") {\r\n      nickNameRef.current?.focus();\r\n      return;\r\n    }\r\n    if (!validPassword || form.password === \"\") {\r\n      passwordRef.current?.focus();\r\n      return;\r\n    }\r\n    if (!samePassword) {\r\n      chkPasswordRef.current?.focus();\r\n      return;\r\n    }\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n      const res = await join(userId, form.password, form.nickName);\r\n      if (res === \"SUCCESS\") {\r\n        const loginRes = await login(userId, form.password);\r\n        if (loginRes === \"SUCCESS\") {\r\n          await dispatch(getUserInfo());\r\n          navigate(\"/join/welcome\");\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const chkValidPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValidPassword(passwordReg.test(e.target.value));\r\n  };\r\n\r\n  const chkSamePassword = () => {\r\n    if (chkPasswordRef.current && passwordRef.current)\r\n      setSamePassword(\r\n        chkPasswordRef.current.value === passwordRef.current.value\r\n      );\r\n  };\r\n  const changeForm = (type: string, value: string) => {\r\n    setForm({ ...form, [type]: value });\r\n  };\r\n\r\n  const chkNickNameDupli = async () => {\r\n    if (nickNameRef.current?.value === \"\") {\r\n      nickNameRef.current.focus();\r\n      return;\r\n    }\r\n    const res = await chkNickNameExist(nickNameRef.current?.value as string);\r\n\r\n    if (res === \"SUCCESS\") {\r\n      setNickNameDupli(\"success\");\r\n      changeForm(\"nickName\", nickNameRef.current?.value as string);\r\n    } else {\r\n      setNickNameDupli(\"err\");\r\n    }\r\n  };\r\n\r\n  const handlePasswordChkInput = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") submitUserInfo();\r\n  };\r\n  return (\r\n    <div className=\"wrraper\">\r\n      <div id=\"join-detail\">\r\n        <header className=\"header\">\r\n          <p className=\"header__title notoBold fs-24\">\r\n            회원정보를 입력해주세요\r\n          </p>\r\n        </header>\r\n        <form className=\"form\">\r\n          <p className=\"form__type notoBold fs-16\">이메일</p>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form__input fs-15 notoReg\"\r\n            defaultValue={userId}\r\n            disabled\r\n          />\r\n          <p className=\"form__type notoBold fs-16\">닉네임</p>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form__input input-nickName fs-15 notoReg\"\r\n            placeholder=\"닉네임을 입력해주세요.\"\r\n            autoComplete=\"nickname\"\r\n            ref={nickNameRef}\r\n            maxLength={10}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"form__btn--dupli notoReg fs-12 inline-block\"\r\n            onClick={chkNickNameDupli}\r\n          >\r\n            중복확인\r\n          </button>\r\n          {nickNameDupli === \"\" ? (\r\n            <div className=\"dummy\" />\r\n          ) : nickNameDupli === \"err\" ? (\r\n            <p className=\"password-msg fs-12 notoMid\">\r\n              이미 사용중인 닉네임입니다.\r\n            </p>\r\n          ) : (\r\n            <p className=\"password-msg success fs-12 notoMid\">\r\n              사용가능한 닉네임입니다.\r\n            </p>\r\n          )}\r\n          <p className=\"form__type notoBold fs-16\">비밀번호</p>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form__input fs-15 notoReg password\"\r\n            onChange={e => {\r\n              chkValidPassword(e);\r\n              changeForm(\"password\", e.target.value);\r\n            }}\r\n            onBlur={chkSamePassword}\r\n            ref={passwordRef}\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            autoComplete=\"new-password\"\r\n          />\r\n          {validPassword ? (\r\n            <div className=\"dummy\" />\r\n          ) : (\r\n            <p className=\"password-msg fs-12 notoMid\">\r\n              숫자,대소문자,특수문자를 혼합하여 8~16자리로 입력해주세요.\r\n            </p>\r\n          )}\r\n\r\n          <p className=\"form__type notoBold fs-16\">비밀번호확인</p>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form__input fs-15 notoReg password-chk\"\r\n            onChange={chkSamePassword}\r\n            ref={chkPasswordRef}\r\n            placeholder=\"비밀번호를 다시 한번 입력해주세요.\"\r\n            autoComplete=\"new-password\"\r\n            onKeyUp={handlePasswordChkInput}\r\n          />\r\n          {samePassword ? (\r\n            <div className=\"dummy\" />\r\n          ) : (\r\n            <p className=\"password-chk-msg fs-12 notoMid\">\r\n              비밀번호가 일치하지 않습니다.\r\n            </p>\r\n          )}\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"form__btn flex align-center justify-center notoMid fs-16\"\r\n            onClick={submitUserInfo}\r\n          >\r\n            {isLoading ? (\r\n              <img\r\n                src={LoadingSpinner}\r\n                className=\"loading-spinner\"\r\n                alt=\"로딩스피너\"\r\n              />\r\n            ) : (\r\n              \"회원가입 완료\"\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinDetail;\r\n"],"names":["passwordReg","emailReg","userId","useAppSelector","state","auth","tmpId","navigate","useNavigate","dispatch","useAppDispatch","useState","validPassword","setValidPassword","samePassword","setSamePassword","isLoading","setIsLoading","nickNameDupli","setNickNameDupli","nickNameRef","useRef","passwordRef","chkPasswordRef","nickName","password","form","setForm","submitUserInfo","current","focus","join","login","getUserInfo","chkSamePassword","value","changeForm","type","chkNickNameDupli","chkNickNameExist","className","id","defaultValue","disabled","placeholder","autoComplete","ref","maxLength","onClick","onChange","e","target","chkValidPassword","onBlur","onKeyUp","key","src","LoadingSpinner","alt"],"sourceRoot":""}