{"version":3,"file":"static/js/878.accba9ea.chunk.js","mappings":"gRAGaA,EAAU,yCAAG,WAAOC,GAAP,qFAClBC,EAAcC,eAAeC,QAAQ,gBADnB,SAENC,EAAAA,GAAAA,IAAQ,QAASJ,EAAM,CACvCK,QAAS,CACPC,cAAeL,KAJK,cAElBM,EAFkB,yBAOjBA,EAAIP,KAAKQ,SAPQ,2CAAH,sDAUVC,EAAU,yCAAG,kGAClBR,EAAcC,eAAeC,QAAQ,gBADnB,SAENC,EAAAA,GAAAA,OAAW,QAAS,CACpCC,QAAS,CACPC,cAAeL,KAJK,cAElBM,EAFkB,yBAOjBA,EAAIP,KAAKQ,SAPQ,2CAAH,qDAUVE,EAAW,yCAAG,WAAOC,GAAP,qFACnBV,EAAcC,eAAeC,QAAQ,gBADlB,SAEPC,EAAAA,GAAAA,KAChB,iBACA,CAAEO,SAAAA,GACF,CACEN,QAAS,CACPC,cAAeL,KAPI,cAEnBM,EAFmB,yBAWlBA,EAAIP,KAAKQ,SAXS,2CAAH,sDAcXI,EAAU,yCAAG,WAAOC,GAAP,qFAClBZ,EAAcC,eAAeC,QAAQ,iBADnB,gCAGJC,EAAAA,GAAAA,IAAA,4BAA6BS,GAAgB,CAC7DR,QAAS,CACPC,cAAeL,KALG,cAGhBM,EAHgB,yBAQfA,EAAIP,MARW,uBAUNI,EAAAA,GAAAA,IAAA,4BAA6BS,IAVvB,cAUlBN,EAVkB,yBAWjBA,EAAIP,MAXa,4CAAH,sDAcVc,EAAe,yCAAG,WAC7BD,EACAE,GAF6B,4FAIXX,EAAAA,GAAAA,IAAA,yBACES,EADF,qBAC2BE,IALhB,cAIvBR,EAJuB,yBAOtBA,EAAIP,MAPkB,2CAAH,yD,+JCoC5B,MAjFA,WACE,OAA4BgB,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAyB,MACpCC,EAAY,yCAAG,6FACfF,EAASG,QADM,oBAEXf,EAAWY,EAASG,QAAQC,MAFjB,uBAIfJ,EAASG,QAAQE,QAJF,iCAOjBR,GAAW,GAPM,UAQCV,EAAAA,EAAAA,IAAYC,GARb,OASL,YATK,OAUfU,EAAS,eAAgB,CAAEQ,OAAO,KAElCX,GAAU,GACVE,GAAW,IAbI,4CAAH,qDAsBlB,OACE,gBAAKU,UAAU,UAAf,UACE,iBAAKC,GAAG,SAAR,WACE,oBAAQD,UAAU,SAAlB,WACE,cAAGA,UAAU,+BAAb,oFAGA,cAAGA,UAAU,kCAAb,wGAGA,cAAGA,UAAU,kCAAb,sFAIF,kBAAMA,UAAU,OAAhB,WACE,cAAGA,UAAU,4BAAb,uCACA,kBACEE,KAAK,WACLF,UAAU,4BACVG,YAAY,sEACZC,IAAKX,EACLY,QAAS,SAAAC,IA1BC,SAACA,GACL,UAAVA,EAAEC,KACJZ,IAyBQa,CAAYF,MAGfnB,GACC,cAAGa,UAAU,0BAAb,gGAIA,gBAAKA,UAAU,iBAGjB,mBACEE,KAAK,SACLF,UAAU,0BACVS,QAASd,EAHX,SAKGN,GACC,gBACEqB,IAAKC,EAAAA,EACLX,UAAU,kBACVY,IAAI,mCAGN","sources":["apis/setAccount.ts","screens/AccountSetting/ChkPw.tsx"],"sourcesContent":["import { UserInfoType } from \"@store/ducks/auth/authSlice\";\r\nimport API from \"./index\";\r\n\r\nexport const setAccount = async (data: UserInfoType) => {\r\n  const accessToken = sessionStorage.getItem(\"access-token\") as string;\r\n  const res = await API.put(\"/user\", data, {\r\n    headers: {\r\n      Authorization: accessToken\r\n    }\r\n  });\r\n  return res.data.message;\r\n};\r\n\r\nexport const withdrawal = async () => {\r\n  const accessToken = sessionStorage.getItem(\"access-token\") as string;\r\n  const res = await API.delete(\"/user\", {\r\n    headers: {\r\n      Authorization: accessToken\r\n    }\r\n  });\r\n  return res.data.message;\r\n};\r\n\r\nexport const passwordChk = async (password: string) => {\r\n  const accessToken = sessionStorage.getItem(\"access-token\") as string;\r\n  const res = await API.post(\r\n    \"/user/password\",\r\n    { password },\r\n    {\r\n      headers: {\r\n        Authorization: accessToken\r\n      }\r\n    }\r\n  );\r\n  return res.data.message;\r\n};\r\n\r\nexport const getProfile = async (userNickname: string) => {\r\n  const accessToken = sessionStorage.getItem(\"access-token\") as string;\r\n  if (accessToken) {\r\n    const res = await API.get(`/userFeed/profile/${userNickname}`, {\r\n      headers: {\r\n        Authorization: accessToken\r\n      }\r\n    });\r\n    return res.data;\r\n  }\r\n  const res = await API.get(`/userFeed/profile/${userNickname}`);\r\n  return res.data;\r\n};\r\n\r\nexport const getFeedItemList = async (\r\n  userNickname: string,\r\n  category: number\r\n) => {\r\n  const res = await API.get(\r\n    `/userFeed/post/${userNickname}?category=${category}`\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport default { setAccount };\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./ChkPw.scss\";\r\nimport LoadingSpinner from \"@images/LoadingSpinner.svg\";\r\nimport { passwordChk } from \"@apis/setAccount\";\r\n\r\nfunction FindPw() {\r\n  const [errMsg, setErrMsg] = useState(false);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const navigate = useNavigate();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const sendAuthCode = async () => {\r\n    if (inputRef.current) {\r\n      const password = inputRef.current.value;\r\n      if (!password) {\r\n        inputRef.current.focus();\r\n        return;\r\n      }\r\n      setSpinner(true);\r\n      const res = await passwordChk(password);\r\n      if (res === \"SUCCESS\") {\r\n        navigate(\"/account/set\", { state: true });\r\n      } else {\r\n        setErrMsg(true);\r\n        setSpinner(false);\r\n      }\r\n    }\r\n  };\r\n  const handleKeyUp = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\") {\r\n      sendAuthCode();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div id=\"chk-pw\">\r\n        <header className=\"header\">\r\n          <p className=\"header__title notoBold fs-24\">\r\n            본인 인증을 완료해주세요.\r\n          </p>\r\n          <p className=\"header__sub-title notoReg fs-16\">\r\n            설정을 위해 본인 인증이 필요해요.\r\n          </p>\r\n          <p className=\"header__sub-title notoReg fs-16\">\r\n            비밀번호를 입력해주세요.\r\n          </p>\r\n        </header>\r\n        <main className=\"form\">\r\n          <p className=\"form__title notoReg fs-16\">비밀번호</p>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form__input notoReg fs-15\"\r\n            placeholder=\"비밀번호를 입력해주세요\"\r\n            ref={inputRef}\r\n            onKeyUp={e => {\r\n              handleKeyUp(e);\r\n            }}\r\n          />\r\n          {errMsg ? (\r\n            <p className=\"form__msg notoMid fs-12\">\r\n              비밀번호가 일치하지 않습니다.\r\n            </p>\r\n          ) : (\r\n            <div className=\"form__dummy\" />\r\n          )}\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"form__btn notoMid fs-16\"\r\n            onClick={sendAuthCode}\r\n          >\r\n            {spinner ? (\r\n              <img\r\n                src={LoadingSpinner}\r\n                className=\"loading-spinner\"\r\n                alt=\"로딩스피너\"\r\n              />\r\n            ) : (\r\n              \"확인\"\r\n            )}\r\n          </button>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindPw;\r\n"],"names":["setAccount","data","accessToken","sessionStorage","getItem","API","headers","Authorization","res","message","withdrawal","passwordChk","password","getProfile","userNickname","getFeedItemList","category","useState","errMsg","setErrMsg","spinner","setSpinner","navigate","useNavigate","inputRef","useRef","sendAuthCode","current","value","focus","state","className","id","type","placeholder","ref","onKeyUp","e","key","handleKeyUp","onClick","src","LoadingSpinner","alt"],"sourceRoot":""}