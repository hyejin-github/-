{"version":3,"file":"static/js/669.d019b16f.chunk.js","mappings":"iKAAO,IAAMA,EACX,qEACWC,EACX,oF,sNC8GF,MAvGA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAiB,IAA7C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAkB,GAApD,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,QAAyB,MAEpCC,EAAW,yCAAG,yGACdF,EAASG,QADK,oBAEgB,MAA5B,UAAAH,EAASG,eAAT,eAAkBC,OAFN,uBAGd,UAAAJ,EAASG,eAAT,SAAkBE,QAClBR,EAAU,kEAJI,6BAOD,gFAAXD,EAPY,uBAQd,UAAAI,EAASG,eAAT,SAAkBE,QARJ,6BAWVC,EAXU,UAWDN,EAASG,eAXR,aAWD,EAAkBC,MAC5BN,EAZW,wBAadC,GAAa,GAbC,WAcIQ,EAAAA,EAAAA,IAAaD,EAAQ,GAdzB,QAeF,UADNE,EAdQ,SAgBZX,EAAU,+EACV,UAAAG,EAASG,eAAT,SAAkBE,SACD,YAARG,IACTjB,GAASkB,EAAAA,EAAAA,IAAS,CAAEC,MAAOJ,KAC3Bb,EAAS,aAEXM,GAAa,GAtBC,4CAAH,qDAuCjB,OACE,gBAAKY,UAAU,UAAf,UACE,iBAAKC,GAAG,OAAR,WACE,mBAAQD,UAAU,SAAlB,UACE,eAAGA,UAAU,+BAAb,8CACS,kBADT,4DAKF,SAACE,EAAA,EAAD,KACA,iBAAKF,UAAU,sCAAf,WACE,iBAAMA,UAAU,cAChB,cAAGA,UAAU,2BAAb,2BACA,iBAAMA,UAAU,iBAElB,kBAAMA,UAAU,OAAhB,WACE,cAAGA,UAAU,4BAAb,4EACA,kBACEA,UAAU,4BACVG,KAAK,OACLC,YAAY,iEACZC,QAjCU,SAACC,GACL,UAAVA,EAAEC,IAIF5B,EAAAA,EAAAA,KAAc2B,EAAEE,OAAOf,OACzBP,EAAU,IAEVA,EAAU,+EANVK,KAgCMkB,IAAKpB,IAEK,KAAXJ,GACC,cAAGe,UAAU,WAEb,cAAGA,UAAU,0BAAb,SAAwCf,KAG1C,mBACEkB,KAAK,SACLH,UAAU,2DACVU,QAASnB,EAHX,SAKGJ,GACC,gBACEwB,IAAKC,EAAAA,EACLZ,UAAU,kBACVa,IAAI,mCAGN,qBAIN,oBAAQb,UAAU,wDAAlB,WACE,cAAGA,UAAU,cAAb,8EACA,SAAC,KAAD,CAAMA,UAAU,eAAec,GAAG,SAAlC","sources":["constants/reg.ts","screens/Join/Join.tsx"],"sourcesContent":["export const passwordReg =\r\n  /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/;\r\nexport const emailReg =\r\n  /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./Join.scss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { emailReg } from \"@constants/reg\";\r\nimport { sendAuthCode } from \"@apis/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTmpId } from \"@store/ducks/auth/authSlice\";\r\nimport SocialSection from \"@components/common/SocialSection\";\r\nimport LoadingSpinner from \"@images/LoadingSpinner.svg\";\r\n\r\nfunction Join() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [errMsg, setErrMsg] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const chkValidate = async () => {\r\n    if (inputRef.current) {\r\n      if (inputRef.current?.value === \"\") {\r\n        inputRef.current?.focus();\r\n        setErrMsg(\"이메일을 입력해주세요.\");\r\n        return;\r\n      }\r\n      if (errMsg === \"이메일 형식을 확인해주세요.\") {\r\n        inputRef.current?.focus();\r\n        return;\r\n      }\r\n      const userId = inputRef.current?.value;\r\n      if (!isLoading) {\r\n        setIsLoading(true);\r\n        const res = await sendAuthCode(userId, 0);\r\n        if (res === \"FAIL\") {\r\n          setErrMsg(\"이미 존재하는 아이디입니다.\");\r\n          inputRef.current?.focus();\r\n        } else if (res === \"SUCCESS\") {\r\n          dispatch(setTmpId({ tmpId: userId }));\r\n          navigate(\"chkEmail\");\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const chkEmailReg = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      chkValidate();\r\n      return;\r\n    }\r\n    if (emailReg.test(e.target.value)) {\r\n      setErrMsg(\"\");\r\n    } else {\r\n      setErrMsg(\"이메일 형식을 확인해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div id=\"join\">\r\n        <header className=\"header\">\r\n          <p className=\"header__title notoBold fs-24\">\r\n            환영합니다! <br />\r\n            나혼자 잘살아 봐요!\r\n          </p>\r\n        </header>\r\n        <SocialSection />\r\n        <div className=\"or flex align-center justify-center\">\r\n          <span className=\"or__line\" />\r\n          <p className=\"or__title notoBold fs-14\">또는</p>\r\n          <span className=\"or__line\" />\r\n        </div>\r\n        <form className=\"form\">\r\n          <p className=\"form__title notoReg fs-16\">이메일로 회원가입하기</p>\r\n          <input\r\n            className=\"form__input notoReg fs-15\"\r\n            type=\"text\"\r\n            placeholder=\"이메일을 입력해주세요.\"\r\n            onKeyUp={chkEmailReg}\r\n            ref={inputRef}\r\n          />\r\n          {errMsg === \"\" ? (\r\n            <p className=\"dummy\" />\r\n          ) : (\r\n            <p className=\"form__msg notoMid fs-12\">{errMsg}</p>\r\n          )}\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"form__btn notoMid fs-15 flex align-center justify-center\"\r\n            onClick={chkValidate}\r\n          >\r\n            {isLoading ? (\r\n              <img\r\n                src={LoadingSpinner}\r\n                className=\"loading-spinner\"\r\n                alt=\"로딩스피너\"\r\n              />\r\n            ) : (\r\n              \"다음\"\r\n            )}\r\n          </button>\r\n        </form>\r\n        <footer className=\"footer notoMid fs-12 flex align-center justify-center\">\r\n          <p className=\"footer__msg\">이미 계정이 있으신가요?</p>\r\n          <Link className=\"footer__link\" to=\"/login\">\r\n            로그인\r\n          </Link>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Join;\r\n"],"names":["passwordReg","emailReg","dispatch","useDispatch","navigate","useNavigate","useState","errMsg","setErrMsg","isLoading","setIsLoading","inputRef","useRef","chkValidate","current","value","focus","userId","sendAuthCode","res","setTmpId","tmpId","className","id","SocialSection","type","placeholder","onKeyUp","e","key","target","ref","onClick","src","LoadingSpinner","alt","to"],"sourceRoot":""}